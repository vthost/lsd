PREFIX  :     <http://dbpedia.org/resource/> PREFIX  dc:   <http://purl.org/dc/elements/1.1/> PREFIX  dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX  geo:  <http://www.w3.org/2003/01/geo/wgs84_pos#> PREFIX  foaf: <http://xmlns.com/foaf/0.1/> PREFIX  dbpedia-prop: <http://dbpedia.org/property/> PREFIX  yago: <http://dbpedia.org/class/yago/> PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX  umbel-sc: <http://umbel.org/umbel/sc/> PREFIX  dbpedia: <http://dbpedia.org/> PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#> PREFIX  owl:  <http://www.w3.org/2002/07/owl#> PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>  SELECT DISTINCT  ?league ?sameAsUri ?linkUrl ?founded ?teams WHERE   {   { :Champions_League                   dbpedia-prop:redirect  ?league .       }     UNION       { ?league  rdfs:label  'Champions League'@en .}     UNION       { ?league  dbpedia-prop:name  'Champions League'@en .}     UNION       { ?league  foaf:name  'Champions League' .}     UNION       { ?league  rdfs:label  'Champions League'@en .}     UNION       { ?league  foaf:name  'Champions League' .}       { ?league  rdf:type  ?leagueType .         FILTER regex(?leagueType, 'http://dbpedia.org/class/yago/.*((SportsLeague)|(ballLeague)).*', 'i')       }     UNION       { ?league  skos:subject  ?subject .         FILTER regex(?subject, 'http://dbpedia.org/resource/Category:.*((Sports_leagues)|(ball_League)).*', 'i')       }     UNION       { ?league  dbpedia-prop:wikiPageUsesTemplate  ?template .         FILTER regex(?template, 'http://dbpedia.org/resource/Template:.*((sports_league)|(football_league)).*', 'i')       }     OPTIONAL       {   { ?league  foaf:page  ?linkUrl .}         UNION           { ?league  owl:sameAs  ?sameAsUri .}       }     OPTIONAL       { ?league  dbpedia-prop:founded  ?founded .         FILTER ( ( datatype(?founded) = xsd:integer ) || ( datatype(?founded) = xsd:string ) )       }     OPTIONAL       { ?league  dbpedia-prop:teams  ?teams .         FILTER ( ( datatype(?teams) = xsd:integer ) || ( datatype(?teams) = xsd:string ) )       }   } 
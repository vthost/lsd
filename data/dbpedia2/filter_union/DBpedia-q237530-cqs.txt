BASE    <file:///Users/Veronika/Desktop/git/qed/qed-core/>
PREFIX  :     <http://dbpedia.org/resource/>
PREFIX  dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  yago: <http://dbpedia.org/class/yago/>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  dbpedia: <http://dbpedia.org/>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  dbpedia2: <http://dbpedia.org/property/>
PREFIX  dbpprop: <http://dbpedia.org/property/>
PREFIX  foaf: <http://xmlns.com/foaf/0.1/>
PREFIX  dc:   <http://purl.org/dc/elements/1.1/>

CONSTRUCT 
  { 
    ?actor1 rdf:type dbpedia-owl:Actor .
    ?actor2 rdf:type dbpedia-owl:Actor .
    ?actor1 dbpedia-owl:partner ?actor2 .
    ?actor1 dbpedia-owl:spouse ?actor2 .
    ?film1 ?starring ?actor1 .
    ?film1 ?starring ?actor2 .
    ?film2 ?starring ?actor1 .
    ?film2 ?starring ?actor2 .
    ?film3 dbpedia-owl:releaseDate ?releaseDate .
    ?film3 dbpedia-owl:director ?director .
    ?director rdf:type yago:AmericanFilmDirectors .
    ?actor1 rdfs:label ?nameActor1 .
    ?actor2 rdfs:label ?nameActor2 .
    ?actor1 dbpedia-owl:activeYearsStartYear ?startActor1 .
    ?actor2 dbpedia-owl:activeYearsStartYear ?startActor2 .
  }
WHERE
  { ?actor1  dbpedia-owl:activeYearsStartYear  ?startActor1 .
    ?actor2  dbpedia-owl:activeYearsStartYear  ?startActor2
    FILTER ( regex(?nameActor1, "b", "i") && regex(?nameActor2, "b", "i") )
    ?film3    dbpedia-owl:director  ?director .
    ?director  rdf:type             yago:AmericanFilmDirectors .
    ?actor1   rdfs:label            ?nameActor1 .
    ?actor2   rdfs:label            ?nameActor2
    FILTER ( ?film3 IN (?film2, ?film1) )
    FILTER ( ?releaseDate > "1990-01-01"^^xsd:date )
    ?film3  dbpedia-owl:releaseDate  ?releaseDate
    FILTER ( ?film1 != ?film2 )
    FILTER ( ?starring IN (dbpprop:starring, dbpedia-owl:starring) )
    ?film1  ?starring  ?actor1 ;
            ?starring  ?actor2 .
    ?film2  ?starring  ?actor1 ;
            ?starring  ?actor2
    { FILTER NOT EXISTS { ?actor1  dbpedia-owl:partner  ?actor2 }
      FILTER NOT EXISTS { ?actor1  dbpedia-owl:spouse  ?actor2 }
    }
    ?actor1  rdf:type  dbpedia-owl:Actor .
    ?actor2  rdf:type  dbpedia-owl:Actor
  }
LIMIT   3

----------------------------------------------
BASE    <file:///Users/Veronika/Desktop/git/qed/qed-core/>
PREFIX  :     <http://dbpedia.org/resource/>
PREFIX  dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  yago: <http://dbpedia.org/class/yago/>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  dbpedia: <http://dbpedia.org/>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  dbpedia2: <http://dbpedia.org/property/>
PREFIX  dbpprop: <http://dbpedia.org/property/>
PREFIX  foaf: <http://xmlns.com/foaf/0.1/>
PREFIX  dc:   <http://purl.org/dc/elements/1.1/>

CONSTRUCT 
  { 
    ?actor1 rdf:type dbpedia-owl:Actor .
    ?actor2 rdf:type dbpedia-owl:Actor .
    ?actor1 dbpedia-owl:partner ?actor2 .
    ?actor1 dbpedia-owl:spouse ?actor2 .
    ?film1 ?starring ?actor1 .
    ?film1 ?starring ?actor2 .
    ?film2 ?starring ?actor1 .
    ?film2 ?starring ?actor2 .
    ?film3 dbpedia-owl:releaseDate ?releaseDate .
    ?film3 dbpedia-owl:director ?director .
    ?director rdf:type yago:AmericanFilmDirectors .
    ?actor1 rdfs:label ?nameActor1 .
    ?actor2 rdfs:label ?nameActor2 .
    ?actor1 dbpedia-owl:activeYearsStartYear ?startActor1 .
    ?actor2 dbpedia-owl:activeYearsStartYear ?startActor2 .
  }
WHERE
  { ?actor1  dbpedia-owl:activeYearsStartYear  ?startActor1 .
    ?actor2  dbpedia-owl:activeYearsStartYear  ?startActor2
    FILTER ( ! ( regex(?nameActor1, "b", "i") && regex(?nameActor2, "b", "i") ) )
    ?film3    dbpedia-owl:director  ?director .
    ?director  rdf:type             yago:AmericanFilmDirectors .
    ?actor1   rdfs:label            ?nameActor1 .
    ?actor2   rdfs:label            ?nameActor2
    FILTER ( ?film3 IN (?film2, ?film1) )
    FILTER ( ?releaseDate > "1990-01-01"^^xsd:date )
    ?film3  dbpedia-owl:releaseDate  ?releaseDate
    FILTER ( ?film1 != ?film2 )
    FILTER ( ?starring IN (dbpprop:starring, dbpedia-owl:starring) )
    ?film1  ?starring  ?actor1 ;
            ?starring  ?actor2 .
    ?film2  ?starring  ?actor1 ;
            ?starring  ?actor2
    { FILTER NOT EXISTS { ?actor1  dbpedia-owl:partner  ?actor2 }
      FILTER NOT EXISTS { ?actor1  dbpedia-owl:spouse  ?actor2 }
    }
    ?actor1  rdf:type  dbpedia-owl:Actor .
    ?actor2  rdf:type  dbpedia-owl:Actor
  }
LIMIT   3

----------------------------------------------
BASE    <file:///Users/Veronika/Desktop/git/qed/qed-core/>
PREFIX  :     <http://dbpedia.org/resource/>
PREFIX  dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  yago: <http://dbpedia.org/class/yago/>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  dbpedia: <http://dbpedia.org/>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  dbpedia2: <http://dbpedia.org/property/>
PREFIX  dbpprop: <http://dbpedia.org/property/>
PREFIX  foaf: <http://xmlns.com/foaf/0.1/>
PREFIX  dc:   <http://purl.org/dc/elements/1.1/>

CONSTRUCT 
  { 
    ?actor1 rdf:type dbpedia-owl:Actor .
    ?actor2 rdf:type dbpedia-owl:Actor .
    ?actor1 dbpedia-owl:partner ?actor2 .
    ?actor1 dbpedia-owl:spouse ?actor2 .
    ?film1 ?starring ?actor1 .
    ?film1 ?starring ?actor2 .
    ?film2 ?starring ?actor1 .
    ?film2 ?starring ?actor2 .
    ?film3 dbpedia-owl:releaseDate ?releaseDate .
    ?film3 dbpedia-owl:director ?director .
    ?director rdf:type yago:AmericanFilmDirectors .
    ?actor1 rdfs:label ?nameActor1 .
    ?actor2 rdfs:label ?nameActor2 .
    ?actor1 dbpedia-owl:activeYearsStartYear ?startActor1 .
    ?actor2 dbpedia-owl:activeYearsStartYear ?startActor2 .
  }
WHERE
  { ?actor1  dbpedia-owl:activeYearsStartYear  ?startActor1 .
    ?actor2  dbpedia-owl:activeYearsStartYear  ?startActor2
    FILTER ( regex(?nameActor1, "b", "i") && regex(?nameActor2, "b", "i") )
    ?film3    dbpedia-owl:director  ?director .
    ?director  rdf:type             yago:AmericanFilmDirectors .
    ?actor1   rdfs:label            ?nameActor1 .
    ?actor2   rdfs:label            ?nameActor2
    FILTER ( ! ( ?film3 IN (?film2, ?film1) ) )
    FILTER ( ?releaseDate > "1990-01-01"^^xsd:date )
    ?film3  dbpedia-owl:releaseDate  ?releaseDate
    FILTER ( ?film1 != ?film2 )
    FILTER ( ?starring IN (dbpprop:starring, dbpedia-owl:starring) )
    ?film1  ?starring  ?actor1 ;
            ?starring  ?actor2 .
    ?film2  ?starring  ?actor1 ;
            ?starring  ?actor2
    { FILTER NOT EXISTS { ?actor1  dbpedia-owl:partner  ?actor2 }
      FILTER NOT EXISTS { ?actor1  dbpedia-owl:spouse  ?actor2 }
    }
    ?actor1  rdf:type  dbpedia-owl:Actor .
    ?actor2  rdf:type  dbpedia-owl:Actor
  }
LIMIT   3

----------------------------------------------
BASE    <file:///Users/Veronika/Desktop/git/qed/qed-core/>
PREFIX  :     <http://dbpedia.org/resource/>
PREFIX  dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  yago: <http://dbpedia.org/class/yago/>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  dbpedia: <http://dbpedia.org/>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  dbpedia2: <http://dbpedia.org/property/>
PREFIX  dbpprop: <http://dbpedia.org/property/>
PREFIX  foaf: <http://xmlns.com/foaf/0.1/>
PREFIX  dc:   <http://purl.org/dc/elements/1.1/>

CONSTRUCT 
  { 
    ?actor1 rdf:type dbpedia-owl:Actor .
    ?actor2 rdf:type dbpedia-owl:Actor .
    ?actor1 dbpedia-owl:partner ?actor2 .
    ?actor1 dbpedia-owl:spouse ?actor2 .
    ?film1 ?starring ?actor1 .
    ?film1 ?starring ?actor2 .
    ?film2 ?starring ?actor1 .
    ?film2 ?starring ?actor2 .
    ?film3 dbpedia-owl:releaseDate ?releaseDate .
    ?film3 dbpedia-owl:director ?director .
    ?director rdf:type yago:AmericanFilmDirectors .
    ?actor1 rdfs:label ?nameActor1 .
    ?actor2 rdfs:label ?nameActor2 .
    ?actor1 dbpedia-owl:activeYearsStartYear ?startActor1 .
    ?actor2 dbpedia-owl:activeYearsStartYear ?startActor2 .
  }
WHERE
  { ?actor1  dbpedia-owl:activeYearsStartYear  ?startActor1 .
    ?actor2  dbpedia-owl:activeYearsStartYear  ?startActor2
    FILTER ( ! ( regex(?nameActor1, "b", "i") && regex(?nameActor2, "b", "i") ) )
    ?film3    dbpedia-owl:director  ?director .
    ?director  rdf:type             yago:AmericanFilmDirectors .
    ?actor1   rdfs:label            ?nameActor1 .
    ?actor2   rdfs:label            ?nameActor2
    FILTER ( ! ( ?film3 IN (?film2, ?film1) ) )
    FILTER ( ?releaseDate > "1990-01-01"^^xsd:date )
    ?film3  dbpedia-owl:releaseDate  ?releaseDate
    FILTER ( ?film1 != ?film2 )
    FILTER ( ?starring IN (dbpprop:starring, dbpedia-owl:starring) )
    ?film1  ?starring  ?actor1 ;
            ?starring  ?actor2 .
    ?film2  ?starring  ?actor1 ;
            ?starring  ?actor2
    { FILTER NOT EXISTS { ?actor1  dbpedia-owl:partner  ?actor2 }
      FILTER NOT EXISTS { ?actor1  dbpedia-owl:spouse  ?actor2 }
    }
    ?actor1  rdf:type  dbpedia-owl:Actor .
    ?actor2  rdf:type  dbpedia-owl:Actor
  }
LIMIT   3

----------------------------------------------
BASE    <file:///Users/Veronika/Desktop/git/qed/qed-core/>
PREFIX  :     <http://dbpedia.org/resource/>
PREFIX  dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  yago: <http://dbpedia.org/class/yago/>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  dbpedia: <http://dbpedia.org/>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  dbpedia2: <http://dbpedia.org/property/>
PREFIX  dbpprop: <http://dbpedia.org/property/>
PREFIX  foaf: <http://xmlns.com/foaf/0.1/>
PREFIX  dc:   <http://purl.org/dc/elements/1.1/>

CONSTRUCT 
  { 
    ?actor1 rdf:type dbpedia-owl:Actor .
    ?actor2 rdf:type dbpedia-owl:Actor .
    ?actor1 dbpedia-owl:partner ?actor2 .
    ?actor1 dbpedia-owl:spouse ?actor2 .
    ?film1 ?starring ?actor1 .
    ?film1 ?starring ?actor2 .
    ?film2 ?starring ?actor1 .
    ?film2 ?starring ?actor2 .
    ?film3 dbpedia-owl:releaseDate ?releaseDate .
    ?film3 dbpedia-owl:director ?director .
    ?director rdf:type yago:AmericanFilmDirectors .
    ?actor1 rdfs:label ?nameActor1 .
    ?actor2 rdfs:label ?nameActor2 .
    ?actor1 dbpedia-owl:activeYearsStartYear ?startActor1 .
    ?actor2 dbpedia-owl:activeYearsStartYear ?startActor2 .
  }
WHERE
  { ?actor1  dbpedia-owl:activeYearsStartYear  ?startActor1 .
    ?actor2  dbpedia-owl:activeYearsStartYear  ?startActor2
    FILTER ( regex(?nameActor1, "b", "i") && regex(?nameActor2, "b", "i") )
    ?film3    dbpedia-owl:director  ?director .
    ?director  rdf:type             yago:AmericanFilmDirectors .
    ?actor1   rdfs:label            ?nameActor1 .
    ?actor2   rdfs:label            ?nameActor2
    FILTER ( ?film3 IN (?film2, ?film1) )
    FILTER ( ! ( ?releaseDate > "1990-01-01"^^xsd:date ) )
    ?film3  dbpedia-owl:releaseDate  ?releaseDate
    FILTER ( ?film1 != ?film2 )
    FILTER ( ?starring IN (dbpprop:starring, dbpedia-owl:starring) )
    ?film1  ?starring  ?actor1 ;
            ?starring  ?actor2 .
    ?film2  ?starring  ?actor1 ;
            ?starring  ?actor2
    { FILTER NOT EXISTS { ?actor1  dbpedia-owl:partner  ?actor2 }
      FILTER NOT EXISTS { ?actor1  dbpedia-owl:spouse  ?actor2 }
    }
    ?actor1  rdf:type  dbpedia-owl:Actor .
    ?actor2  rdf:type  dbpedia-owl:Actor
  }
LIMIT   3

----------------------------------------------
BASE    <file:///Users/Veronika/Desktop/git/qed/qed-core/>
PREFIX  :     <http://dbpedia.org/resource/>
PREFIX  dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  yago: <http://dbpedia.org/class/yago/>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  dbpedia: <http://dbpedia.org/>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  dbpedia2: <http://dbpedia.org/property/>
PREFIX  dbpprop: <http://dbpedia.org/property/>
PREFIX  foaf: <http://xmlns.com/foaf/0.1/>
PREFIX  dc:   <http://purl.org/dc/elements/1.1/>

CONSTRUCT 
  { 
    ?actor1 rdf:type dbpedia-owl:Actor .
    ?actor2 rdf:type dbpedia-owl:Actor .
    ?actor1 dbpedia-owl:partner ?actor2 .
    ?actor1 dbpedia-owl:spouse ?actor2 .
    ?film1 ?starring ?actor1 .
    ?film1 ?starring ?actor2 .
    ?film2 ?starring ?actor1 .
    ?film2 ?starring ?actor2 .
    ?film3 dbpedia-owl:releaseDate ?releaseDate .
    ?film3 dbpedia-owl:director ?director .
    ?director rdf:type yago:AmericanFilmDirectors .
    ?actor1 rdfs:label ?nameActor1 .
    ?actor2 rdfs:label ?nameActor2 .
    ?actor1 dbpedia-owl:activeYearsStartYear ?startActor1 .
    ?actor2 dbpedia-owl:activeYearsStartYear ?startActor2 .
  }
WHERE
  { ?actor1  dbpedia-owl:activeYearsStartYear  ?startActor1 .
    ?actor2  dbpedia-owl:activeYearsStartYear  ?startActor2
    FILTER ( ! ( regex(?nameActor1, "b", "i") && regex(?nameActor2, "b", "i") ) )
    ?film3    dbpedia-owl:director  ?director .
    ?director  rdf:type             yago:AmericanFilmDirectors .
    ?actor1   rdfs:label            ?nameActor1 .
    ?actor2   rdfs:label            ?nameActor2
    FILTER ( ?film3 IN (?film2, ?film1) )
    FILTER ( ! ( ?releaseDate > "1990-01-01"^^xsd:date ) )
    ?film3  dbpedia-owl:releaseDate  ?releaseDate
    FILTER ( ?film1 != ?film2 )
    FILTER ( ?starring IN (dbpprop:starring, dbpedia-owl:starring) )
    ?film1  ?starring  ?actor1 ;
            ?starring  ?actor2 .
    ?film2  ?starring  ?actor1 ;
            ?starring  ?actor2
    { FILTER NOT EXISTS { ?actor1  dbpedia-owl:partner  ?actor2 }
      FILTER NOT EXISTS { ?actor1  dbpedia-owl:spouse  ?actor2 }
    }
    ?actor1  rdf:type  dbpedia-owl:Actor .
    ?actor2  rdf:type  dbpedia-owl:Actor
  }
LIMIT   3

----------------------------------------------
BASE    <file:///Users/Veronika/Desktop/git/qed/qed-core/>
PREFIX  :     <http://dbpedia.org/resource/>
PREFIX  dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  yago: <http://dbpedia.org/class/yago/>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  dbpedia: <http://dbpedia.org/>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  dbpedia2: <http://dbpedia.org/property/>
PREFIX  dbpprop: <http://dbpedia.org/property/>
PREFIX  foaf: <http://xmlns.com/foaf/0.1/>
PREFIX  dc:   <http://purl.org/dc/elements/1.1/>

CONSTRUCT 
  { 
    ?actor1 rdf:type dbpedia-owl:Actor .
    ?actor2 rdf:type dbpedia-owl:Actor .
    ?actor1 dbpedia-owl:partner ?actor2 .
    ?actor1 dbpedia-owl:spouse ?actor2 .
    ?film1 ?starring ?actor1 .
    ?film1 ?starring ?actor2 .
    ?film2 ?starring ?actor1 .
    ?film2 ?starring ?actor2 .
    ?film3 dbpedia-owl:releaseDate ?releaseDate .
    ?film3 dbpedia-owl:director ?director .
    ?director rdf:type yago:AmericanFilmDirectors .
    ?actor1 rdfs:label ?nameActor1 .
    ?actor2 rdfs:label ?nameActor2 .
    ?actor1 dbpedia-owl:activeYearsStartYear ?startActor1 .
    ?actor2 dbpedia-owl:activeYearsStartYear ?startActor2 .
  }
WHERE
  { ?actor1  dbpedia-owl:activeYearsStartYear  ?startActor1 .
    ?actor2  dbpedia-owl:activeYearsStartYear  ?startActor2
    FILTER ( regex(?nameActor1, "b", "i") && regex(?nameActor2, "b", "i") )
    ?film3    dbpedia-owl:director  ?director .
    ?director  rdf:type             yago:AmericanFilmDirectors .
    ?actor1   rdfs:label            ?nameActor1 .
    ?actor2   rdfs:label            ?nameActor2
    FILTER ( ! ( ?film3 IN (?film2, ?film1) ) )
    FILTER ( ! ( ?releaseDate > "1990-01-01"^^xsd:date ) )
    ?film3  dbpedia-owl:releaseDate  ?releaseDate
    FILTER ( ?film1 != ?film2 )
    FILTER ( ?starring IN (dbpprop:starring, dbpedia-owl:starring) )
    ?film1  ?starring  ?actor1 ;
            ?starring  ?actor2 .
    ?film2  ?starring  ?actor1 ;
            ?starring  ?actor2
    { FILTER NOT EXISTS { ?actor1  dbpedia-owl:partner  ?actor2 }
      FILTER NOT EXISTS { ?actor1  dbpedia-owl:spouse  ?actor2 }
    }
    ?actor1  rdf:type  dbpedia-owl:Actor .
    ?actor2  rdf:type  dbpedia-owl:Actor
  }
LIMIT   3

----------------------------------------------
BASE    <file:///Users/Veronika/Desktop/git/qed/qed-core/>
PREFIX  :     <http://dbpedia.org/resource/>
PREFIX  dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  yago: <http://dbpedia.org/class/yago/>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  dbpedia: <http://dbpedia.org/>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  dbpedia2: <http://dbpedia.org/property/>
PREFIX  dbpprop: <http://dbpedia.org/property/>
PREFIX  foaf: <http://xmlns.com/foaf/0.1/>
PREFIX  dc:   <http://purl.org/dc/elements/1.1/>

CONSTRUCT 
  { 
    ?actor1 rdf:type dbpedia-owl:Actor .
    ?actor2 rdf:type dbpedia-owl:Actor .
    ?actor1 dbpedia-owl:partner ?actor2 .
    ?actor1 dbpedia-owl:spouse ?actor2 .
    ?film1 ?starring ?actor1 .
    ?film1 ?starring ?actor2 .
    ?film2 ?starring ?actor1 .
    ?film2 ?starring ?actor2 .
    ?film3 dbpedia-owl:releaseDate ?releaseDate .
    ?film3 dbpedia-owl:director ?director .
    ?director rdf:type yago:AmericanFilmDirectors .
    ?actor1 rdfs:label ?nameActor1 .
    ?actor2 rdfs:label ?nameActor2 .
    ?actor1 dbpedia-owl:activeYearsStartYear ?startActor1 .
    ?actor2 dbpedia-owl:activeYearsStartYear ?startActor2 .
  }
WHERE
  { ?actor1  dbpedia-owl:activeYearsStartYear  ?startActor1 .
    ?actor2  dbpedia-owl:activeYearsStartYear  ?startActor2
    FILTER ( ! ( regex(?nameActor1, "b", "i") && regex(?nameActor2, "b", "i") ) )
    ?film3    dbpedia-owl:director  ?director .
    ?director  rdf:type             yago:AmericanFilmDirectors .
    ?actor1   rdfs:label            ?nameActor1 .
    ?actor2   rdfs:label            ?nameActor2
    FILTER ( ! ( ?film3 IN (?film2, ?film1) ) )
    FILTER ( ! ( ?releaseDate > "1990-01-01"^^xsd:date ) )
    ?film3  dbpedia-owl:releaseDate  ?releaseDate
    FILTER ( ?film1 != ?film2 )
    FILTER ( ?starring IN (dbpprop:starring, dbpedia-owl:starring) )
    ?film1  ?starring  ?actor1 ;
            ?starring  ?actor2 .
    ?film2  ?starring  ?actor1 ;
            ?starring  ?actor2
    { FILTER NOT EXISTS { ?actor1  dbpedia-owl:partner  ?actor2 }
      FILTER NOT EXISTS { ?actor1  dbpedia-owl:spouse  ?actor2 }
    }
    ?actor1  rdf:type  dbpedia-owl:Actor .
    ?actor2  rdf:type  dbpedia-owl:Actor
  }
LIMIT   3

----------------------------------------------
BASE    <file:///Users/Veronika/Desktop/git/qed/qed-core/>
PREFIX  :     <http://dbpedia.org/resource/>
PREFIX  dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  yago: <http://dbpedia.org/class/yago/>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  dbpedia: <http://dbpedia.org/>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  dbpedia2: <http://dbpedia.org/property/>
PREFIX  dbpprop: <http://dbpedia.org/property/>
PREFIX  foaf: <http://xmlns.com/foaf/0.1/>
PREFIX  dc:   <http://purl.org/dc/elements/1.1/>

CONSTRUCT 
  { 
    ?actor1 rdf:type dbpedia-owl:Actor .
    ?actor2 rdf:type dbpedia-owl:Actor .
    ?actor1 dbpedia-owl:partner ?actor2 .
    ?actor1 dbpedia-owl:spouse ?actor2 .
    ?film1 ?starring ?actor1 .
    ?film1 ?starring ?actor2 .
    ?film2 ?starring ?actor1 .
    ?film2 ?starring ?actor2 .
    ?film3 dbpedia-owl:releaseDate ?releaseDate .
    ?film3 dbpedia-owl:director ?director .
    ?director rdf:type yago:AmericanFilmDirectors .
    ?actor1 rdfs:label ?nameActor1 .
    ?actor2 rdfs:label ?nameActor2 .
    ?actor1 dbpedia-owl:activeYearsStartYear ?startActor1 .
    ?actor2 dbpedia-owl:activeYearsStartYear ?startActor2 .
  }
WHERE
  { ?actor1  dbpedia-owl:activeYearsStartYear  ?startActor1 .
    ?actor2  dbpedia-owl:activeYearsStartYear  ?startActor2
    FILTER ( regex(?nameActor1, "b", "i") && regex(?nameActor2, "b", "i") )
    ?film3    dbpedia-owl:director  ?director .
    ?director  rdf:type             yago:AmericanFilmDirectors .
    ?actor1   rdfs:label            ?nameActor1 .
    ?actor2   rdfs:label            ?nameActor2
    FILTER ( ?film3 IN (?film2, ?film1) )
    FILTER ( ?releaseDate > "1990-01-01"^^xsd:date )
    ?film3  dbpedia-owl:releaseDate  ?releaseDate
    FILTER ( ! ( ?film1 != ?film2 ) )
    FILTER ( ?starring IN (dbpprop:starring, dbpedia-owl:starring) )
    ?film1  ?starring  ?actor1 ;
            ?starring  ?actor2 .
    ?film2  ?starring  ?actor1 ;
            ?starring  ?actor2
    { FILTER NOT EXISTS { ?actor1  dbpedia-owl:partner  ?actor2 }
      FILTER NOT EXISTS { ?actor1  dbpedia-owl:spouse  ?actor2 }
    }
    ?actor1  rdf:type  dbpedia-owl:Actor .
    ?actor2  rdf:type  dbpedia-owl:Actor
  }
LIMIT   3

----------------------------------------------
BASE    <file:///Users/Veronika/Desktop/git/qed/qed-core/>
PREFIX  :     <http://dbpedia.org/resource/>
PREFIX  dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  yago: <http://dbpedia.org/class/yago/>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  dbpedia: <http://dbpedia.org/>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  dbpedia2: <http://dbpedia.org/property/>
PREFIX  dbpprop: <http://dbpedia.org/property/>
PREFIX  foaf: <http://xmlns.com/foaf/0.1/>
PREFIX  dc:   <http://purl.org/dc/elements/1.1/>

CONSTRUCT 
  { 
    ?actor1 rdf:type dbpedia-owl:Actor .
    ?actor2 rdf:type dbpedia-owl:Actor .
    ?actor1 dbpedia-owl:partner ?actor2 .
    ?actor1 dbpedia-owl:spouse ?actor2 .
    ?film1 ?starring ?actor1 .
    ?film1 ?starring ?actor2 .
    ?film2 ?starring ?actor1 .
    ?film2 ?starring ?actor2 .
    ?film3 dbpedia-owl:releaseDate ?releaseDate .
    ?film3 dbpedia-owl:director ?director .
    ?director rdf:type yago:AmericanFilmDirectors .
    ?actor1 rdfs:label ?nameActor1 .
    ?actor2 rdfs:label ?nameActor2 .
    ?actor1 dbpedia-owl:activeYearsStartYear ?startActor1 .
    ?actor2 dbpedia-owl:activeYearsStartYear ?startActor2 .
  }
WHERE
  { ?actor1  dbpedia-owl:activeYearsStartYear  ?startActor1 .
    ?actor2  dbpedia-owl:activeYearsStartYear  ?startActor2
    FILTER ( ! ( regex(?nameActor1, "b", "i") && regex(?nameActor2, "b", "i") ) )
    ?film3    dbpedia-owl:director  ?director .
    ?director  rdf:type             yago:AmericanFilmDirectors .
    ?actor1   rdfs:label            ?nameActor1 .
    ?actor2   rdfs:label            ?nameActor2
    FILTER ( ?film3 IN (?film2, ?film1) )
    FILTER ( ?releaseDate > "1990-01-01"^^xsd:date )
    ?film3  dbpedia-owl:releaseDate  ?releaseDate
    FILTER ( ! ( ?film1 != ?film2 ) )
    FILTER ( ?starring IN (dbpprop:starring, dbpedia-owl:starring) )
    ?film1  ?starring  ?actor1 ;
            ?starring  ?actor2 .
    ?film2  ?starring  ?actor1 ;
            ?starring  ?actor2
    { FILTER NOT EXISTS { ?actor1  dbpedia-owl:partner  ?actor2 }
      FILTER NOT EXISTS { ?actor1  dbpedia-owl:spouse  ?actor2 }
    }
    ?actor1  rdf:type  dbpedia-owl:Actor .
    ?actor2  rdf:type  dbpedia-owl:Actor
  }
LIMIT   3

----------------------------------------------
BASE    <file:///Users/Veronika/Desktop/git/qed/qed-core/>
PREFIX  :     <http://dbpedia.org/resource/>
PREFIX  dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  yago: <http://dbpedia.org/class/yago/>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  dbpedia: <http://dbpedia.org/>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  dbpedia2: <http://dbpedia.org/property/>
PREFIX  dbpprop: <http://dbpedia.org/property/>
PREFIX  foaf: <http://xmlns.com/foaf/0.1/>
PREFIX  dc:   <http://purl.org/dc/elements/1.1/>

CONSTRUCT 
  { 
    ?actor1 rdf:type dbpedia-owl:Actor .
    ?actor2 rdf:type dbpedia-owl:Actor .
    ?actor1 dbpedia-owl:partner ?actor2 .
    ?actor1 dbpedia-owl:spouse ?actor2 .
    ?film1 ?starring ?actor1 .
    ?film1 ?starring ?actor2 .
    ?film2 ?starring ?actor1 .
    ?film2 ?starring ?actor2 .
    ?film3 dbpedia-owl:releaseDate ?releaseDate .
    ?film3 dbpedia-owl:director ?director .
    ?director rdf:type yago:AmericanFilmDirectors .
    ?actor1 rdfs:label ?nameActor1 .
    ?actor2 rdfs:label ?nameActor2 .
    ?actor1 dbpedia-owl:activeYearsStartYear ?startActor1 .
    ?actor2 dbpedia-owl:activeYearsStartYear ?startActor2 .
  }
WHERE
  { ?actor1  dbpedia-owl:activeYearsStartYear  ?startActor1 .
    ?actor2  dbpedia-owl:activeYearsStartYear  ?startActor2
    FILTER ( regex(?nameActor1, "b", "i") && regex(?nameActor2, "b", "i") )
    ?film3    dbpedia-owl:director  ?director .
    ?director  rdf:type             yago:AmericanFilmDirectors .
    ?actor1   rdfs:label            ?nameActor1 .
    ?actor2   rdfs:label            ?nameActor2
    FILTER ( ! ( ?film3 IN (?film2, ?film1) ) )
    FILTER ( ?releaseDate > "1990-01-01"^^xsd:date )
    ?film3  dbpedia-owl:releaseDate  ?releaseDate
    FILTER ( ! ( ?film1 != ?film2 ) )
    FILTER ( ?starring IN (dbpprop:starring, dbpedia-owl:starring) )
    ?film1  ?starring  ?actor1 ;
            ?starring  ?actor2 .
    ?film2  ?starring  ?actor1 ;
            ?starring  ?actor2
    { FILTER NOT EXISTS { ?actor1  dbpedia-owl:partner  ?actor2 }
      FILTER NOT EXISTS { ?actor1  dbpedia-owl:spouse  ?actor2 }
    }
    ?actor1  rdf:type  dbpedia-owl:Actor .
    ?actor2  rdf:type  dbpedia-owl:Actor
  }
LIMIT   3

----------------------------------------------
